class Solution {
    // Function to find minimum number of pages.
    public static long findPages(int n, int[] arr, int m) {
        if (m > n) {
            return -1;
        }
        int total_pages = 0;
        
        for (int i = 0; i < n; i++) {
            total_pages += arr[i];
        }

        int start = 0, end = total_pages, ans = -1;
        
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (isPossible(m, n, arr, mid)) {
                ans = mid;
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        
        return ans;
    }

    private static boolean isPossible(int m, int n, int[] arr, int mid) {
        int pages_sum = 0, count_student = 1;
        
        for (int i = 0; i < n; i++) {
            if (pages_sum + arr[i] <= mid) {
                pages_sum += arr[i];
            } else {
                count_student++;
                if (count_student > m || arr[i] > mid) {
                    return false;
                }
                pages_sum = arr[i];
            }
        }
        
        return true;
    }
}
