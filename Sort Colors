class Solution {
    public void mergeSort(int[] nums,int start,int end){
        if(start>=end){
            return;
        }
        int mid=(start+end)/2;
        mergeSort(nums,start,mid);
        mergeSort(nums,mid+1,end);
        merge(nums,start,mid,end);
    }
    public void merge(int[] nums,int start,int mid,int end){
        int[] merge=new int[end-start+1];
        int i=start,j=mid+1,k=0;
        while(i<=mid && j<=end){
           if(nums[i]<nums[j]){
           merge[k++]=nums[i++];
           }else{
            merge[k++]=nums[j++];
           }
        }
        while(i<=mid){
            merge[k++]=nums[i++];
        }
        while(j<=end){
            merge[k++]=nums[j++];
        }

        for(k=0,i=start;k<merge.length;k++,i++){
            nums[i]=merge[k];
        }
    }
    public void sortColors(int[] nums) {
        mergeSort(nums,0,nums.length-1);
    }
}
