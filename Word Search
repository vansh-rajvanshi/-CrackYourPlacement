class Solution {
    public boolean dfs(char[][]board,int row,int col,String word,int idx){
        if(idx==word.length()){
            return true;
        }
        if(row>=board.length || col>=board[0].length || row<0 || col<0){
            return false;
        }
        if(board[row][col]!=word.charAt(idx)){
            return false;
        }
        char ch=board[row][col];
        board[row][col]=' ';
        if(dfs(board,row+1,col,word,idx+1) || dfs(board,row,col+1,word,idx+1) ||dfs(board,row-1,col,word,idx+1) || dfs(board,row,col-1,word,idx+1)){
            return true;
        }
        board[row][col]=ch;
        return false;
    }
    public boolean exist(char[][] board, String word) {
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                boolean found=dfs(board,i,j,word,0);
                if(found){
                    return true;
                }
            }
        }
        return false;
    }
}
