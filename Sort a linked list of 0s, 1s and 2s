class Solution {
    // Function to sort a linked list of 0s, 1s and 2s.
    static Node segregate(Node head) {
        // add your code here
        Node zeroD = new Node(0); 
        Node oneD = new Node(0); 
        Node twoD = new Node(0);

        Node zero = zeroD, one = oneD, two = twoD; 
        Node curr = head; 
        while (curr != null) { 
            if (curr.data == 0) { 
                zero.next = curr; 
                zero = zero.next; 
            } 
            else if (curr.data == 1) { 
                one.next = curr; 
                one = one.next; 
            } 
            else { 
                two.next = curr; 
                two = two.next; 
            } 
            curr = curr.next;
        } 
        zero.next = (oneD.next != null) ? (oneD.next) : (twoD.next); 
        one.next = twoD.next; 
        two.next = null;
        head = zeroD.next; 

        return head; 
    }
}
