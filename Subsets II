class Solution {
    public void subSet(List<List<Integer>> list, int[] arr, int i, List<Integer> temp) {
        if (i == arr.length) {
            list.add(new ArrayList<>(temp));
            return;
        }

        temp.add(arr[i]);
        subSet(list, arr, i + 1, temp);
        temp.remove(temp.size() - 1);
        while (i + 1 < arr.length && arr[i] == arr[i + 1]) {
            i++;
        }
        subSet(list, arr, i + 1, temp);
    }

    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums);  // Sort the array to ensure duplicates are adjacent
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        subSet(list, nums, 0, temp);
        return list;
    }
}
