class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        
        if (root == null) {
            return result;
        }
        
        q.add(root);
        q.add(null);
        int count = 1; // counting null
        
        while (!q.isEmpty()) {
            TreeNode curr = q.remove();
            if (curr == null) {
                if (count % 2 == 0) {
                    Collections.reverse(list);
                }
                result.add(list);
                list = new ArrayList<>();
                if (!q.isEmpty()) {
                    q.add(null);
                } 
                count++;
            } else {
                list.add(curr.val);
                
                if (curr.left != null) {
                    q.add(curr.left);
                }
                if (curr.right != null) {
                    q.add(curr.right);
                }
            }
        }
        
        return result;
    }
}
