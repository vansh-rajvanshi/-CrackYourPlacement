class Solution {
    public String removeDuplicates(String s, int k) {
        Stack<Pair> st = new Stack<>();
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            if (!st.isEmpty() && st.peek().ch == ch) {
                st.peek().count++;
            } else {
                st.push(new Pair(ch, 1));
            }

            if (st.peek().count == k) {
                st.pop();
            }
        }

        StringBuilder str = new StringBuilder();
        while (!st.isEmpty()) {
            Pair p = st.pop();
            for (int i = 0; i < p.count; i++) {
                str.append(p.ch);
            }
        }

        return str.reverse().toString();
    }
    
    class Pair {
        char ch;
        int count;

        Pair(char ch, int count) {
            this.ch = ch;
            this.count = count;
        }
    }
}
